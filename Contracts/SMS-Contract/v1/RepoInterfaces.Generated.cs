using MedicalResearch.StudyManagement.Model;
using System;
using System.ComponentModel.DataAnnotations;
using System.Collections.ObjectModel;

namespace MedicalResearch.StudyManagement.StoreAccess {

/// <summary> Provides CRUD access to stored Institutes (based on schema version '1.6.0') </summary>
public partial interface IInstitutes {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding Institutes.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific Institute addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="instituteUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  Institute GetInstituteByInstituteUid(Guid instituteUid);

  /// <summary> Loads Institutes. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of Institutes which should be returned </param>
  Institute[] GetInstitutes(int page = 1, int pageSize = 20);

  /// <summary> Loads Institutes where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of Institutes which should be returned</param>
  Institute[] SearchInstitutes(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new Institute and returns its primary identifier (or null on failure). </summary>
  /// <param name="institute"> Institute containing the new values </param>
  bool AddNewInstitute(Institute institute);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given Institute addressed by the primary identifier fields within the given Institute. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="institute"> Institute containing the new values (the primary identifier fields within the given Institute will be used to address the target record) </param>
  bool UpdateInstitute(Institute institute);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given Institute addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="instituteUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  /// <param name="institute"> Institute containing the new values (the primary identifier fields within the given Institute will be ignored) </param>
  bool UpdateInstituteByInstituteUid(Guid instituteUid, Institute institute);

  /// <summary> Deletes a specific Institute addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="instituteUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  bool DeleteInstituteByInstituteUid(Guid instituteUid);

}

/// <summary> Provides CRUD access to stored ResearchStudies (based on schema version '1.6.0') </summary>
public partial interface IResearchStudies {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding ResearchStudies.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific ResearchStudy addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="researchStudyUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  ResearchStudy GetResearchStudyByResearchStudyUid(Guid researchStudyUid);

  /// <summary> Loads ResearchStudies. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of ResearchStudies which should be returned </param>
  ResearchStudy[] GetResearchStudies(int page = 1, int pageSize = 20);

  /// <summary> Loads ResearchStudies where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of ResearchStudies which should be returned</param>
  ResearchStudy[] SearchResearchStudies(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new ResearchStudy and returns its primary identifier (or null on failure). </summary>
  /// <param name="researchStudy"> ResearchStudy containing the new values </param>
  bool AddNewResearchStudy(ResearchStudy researchStudy);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given ResearchStudy addressed by the primary identifier fields within the given ResearchStudy. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="researchStudy"> ResearchStudy containing the new values (the primary identifier fields within the given ResearchStudy will be used to address the target record) </param>
  bool UpdateResearchStudy(ResearchStudy researchStudy);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given ResearchStudy addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="researchStudyUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  /// <param name="researchStudy"> ResearchStudy containing the new values (the primary identifier fields within the given ResearchStudy will be ignored) </param>
  bool UpdateResearchStudyByResearchStudyUid(Guid researchStudyUid, ResearchStudy researchStudy);

  /// <summary> Deletes a specific ResearchStudy addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="researchStudyUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  bool DeleteResearchStudyByResearchStudyUid(Guid researchStudyUid);

}

/// <summary> Provides CRUD access to stored Sites (based on schema version '1.6.0') </summary>
public partial interface ISites {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding Sites.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific Site addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="siteUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  Site GetSiteBySiteUid(Guid siteUid);

  /// <summary> Loads Sites. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of Sites which should be returned </param>
  Site[] GetSites(int page = 1, int pageSize = 20);

  /// <summary> Loads Sites where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of Sites which should be returned</param>
  Site[] SearchSites(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new Site and returns its primary identifier (or null on failure). </summary>
  /// <param name="site"> Site containing the new values </param>
  bool AddNewSite(Site site);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given Site addressed by the primary identifier fields within the given Site. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="site"> Site containing the new values (the primary identifier fields within the given Site will be used to address the target record) </param>
  bool UpdateSite(Site site);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given Site addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="siteUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  /// <param name="site"> Site containing the new values (the primary identifier fields within the given Site will be ignored) </param>
  bool UpdateSiteBySiteUid(Guid siteUid, Site site);

  /// <summary> Deletes a specific Site addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="siteUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  bool DeleteSiteBySiteUid(Guid siteUid);

}

/// <summary> Provides CRUD access to stored SystemEndpoints (based on schema version '1.6.0') </summary>
public partial interface ISystemEndpoints {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding SystemEndpoints.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific SystemEndpoint addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="systemEndpointUid"> Represents the primary identity of a SystemEndpoint </param>
  SystemEndpoint GetSystemEndpointBySystemEndpointUid(Guid systemEndpointUid);

  /// <summary> Loads SystemEndpoints. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of SystemEndpoints which should be returned </param>
  SystemEndpoint[] GetSystemEndpoints(int page = 1, int pageSize = 20);

  /// <summary> Loads SystemEndpoints where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of SystemEndpoints which should be returned</param>
  SystemEndpoint[] SearchSystemEndpoints(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new SystemEndpoint and returns its primary identifier (or null on failure). </summary>
  /// <param name="systemEndpoint"> SystemEndpoint containing the new values </param>
  bool AddNewSystemEndpoint(SystemEndpoint systemEndpoint);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given SystemEndpoint addressed by the primary identifier fields within the given SystemEndpoint. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="systemEndpoint"> SystemEndpoint containing the new values (the primary identifier fields within the given SystemEndpoint will be used to address the target record) </param>
  bool UpdateSystemEndpoint(SystemEndpoint systemEndpoint);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given SystemEndpoint addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="systemEndpointUid"> Represents the primary identity of a SystemEndpoint </param>
  /// <param name="systemEndpoint"> SystemEndpoint containing the new values (the primary identifier fields within the given SystemEndpoint will be ignored) </param>
  bool UpdateSystemEndpointBySystemEndpointUid(Guid systemEndpointUid, SystemEndpoint systemEndpoint);

  /// <summary> Deletes a specific SystemEndpoint addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="systemEndpointUid"> Represents the primary identity of a SystemEndpoint </param>
  bool DeleteSystemEndpointBySystemEndpointUid(Guid systemEndpointUid);

}

/// <summary> Provides CRUD access to stored InstituteRelatedSystemAssignemnts (based on schema version '1.6.0') </summary>
public partial interface IInstituteRelatedSystemAssignemnts {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding InstituteRelatedSystemAssignemnts.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific InstituteRelatedSystemAssignemnt addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="instituteRelatedSystemAssignemntUid"> Represents the primary identity of a InstituteRelatedSystemAssignemnt </param>
  InstituteRelatedSystemAssignemnt GetInstituteRelatedSystemAssignemntByInstituteRelatedSystemAssignemntUid(Guid instituteRelatedSystemAssignemntUid);

  /// <summary> Loads InstituteRelatedSystemAssignemnts. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of InstituteRelatedSystemAssignemnts which should be returned </param>
  InstituteRelatedSystemAssignemnt[] GetInstituteRelatedSystemAssignemnts(int page = 1, int pageSize = 20);

  /// <summary> Loads InstituteRelatedSystemAssignemnts where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of InstituteRelatedSystemAssignemnts which should be returned</param>
  InstituteRelatedSystemAssignemnt[] SearchInstituteRelatedSystemAssignemnts(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new InstituteRelatedSystemAssignemnt and returns its primary identifier (or null on failure). </summary>
  /// <param name="instituteRelatedSystemAssignemnt"> InstituteRelatedSystemAssignemnt containing the new values </param>
  bool AddNewInstituteRelatedSystemAssignemnt(InstituteRelatedSystemAssignemnt instituteRelatedSystemAssignemnt);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given InstituteRelatedSystemAssignemnt addressed by the primary identifier fields within the given InstituteRelatedSystemAssignemnt. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="instituteRelatedSystemAssignemnt"> InstituteRelatedSystemAssignemnt containing the new values (the primary identifier fields within the given InstituteRelatedSystemAssignemnt will be used to address the target record) </param>
  bool UpdateInstituteRelatedSystemAssignemnt(InstituteRelatedSystemAssignemnt instituteRelatedSystemAssignemnt);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given InstituteRelatedSystemAssignemnt addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="instituteRelatedSystemAssignemntUid"> Represents the primary identity of a InstituteRelatedSystemAssignemnt </param>
  /// <param name="instituteRelatedSystemAssignemnt"> InstituteRelatedSystemAssignemnt containing the new values (the primary identifier fields within the given InstituteRelatedSystemAssignemnt will be ignored) </param>
  bool UpdateInstituteRelatedSystemAssignemntByInstituteRelatedSystemAssignemntUid(Guid instituteRelatedSystemAssignemntUid, InstituteRelatedSystemAssignemnt instituteRelatedSystemAssignemnt);

  /// <summary> Deletes a specific InstituteRelatedSystemAssignemnt addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="instituteRelatedSystemAssignemntUid"> Represents the primary identity of a InstituteRelatedSystemAssignemnt </param>
  bool DeleteInstituteRelatedSystemAssignemntByInstituteRelatedSystemAssignemntUid(Guid instituteRelatedSystemAssignemntUid);

}

/// <summary> Provides CRUD access to stored SystemConnections (based on schema version '1.6.0') </summary>
public partial interface ISystemConnections {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding SystemConnections.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific SystemConnection addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="systemConnectionUid"> Represents the primary identity of a SystemConnection </param>
  SystemConnection GetSystemConnectionBySystemConnectionUid(Guid systemConnectionUid);

  /// <summary> Loads SystemConnections. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of SystemConnections which should be returned </param>
  SystemConnection[] GetSystemConnections(int page = 1, int pageSize = 20);

  /// <summary> Loads SystemConnections where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of SystemConnections which should be returned</param>
  SystemConnection[] SearchSystemConnections(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new SystemConnection and returns its primary identifier (or null on failure). </summary>
  /// <param name="systemConnection"> SystemConnection containing the new values </param>
  bool AddNewSystemConnection(SystemConnection systemConnection);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given SystemConnection addressed by the primary identifier fields within the given SystemConnection. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="systemConnection"> SystemConnection containing the new values (the primary identifier fields within the given SystemConnection will be used to address the target record) </param>
  bool UpdateSystemConnection(SystemConnection systemConnection);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given SystemConnection addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="systemConnectionUid"> Represents the primary identity of a SystemConnection </param>
  /// <param name="systemConnection"> SystemConnection containing the new values (the primary identifier fields within the given SystemConnection will be ignored) </param>
  bool UpdateSystemConnectionBySystemConnectionUid(Guid systemConnectionUid, SystemConnection systemConnection);

  /// <summary> Deletes a specific SystemConnection addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="systemConnectionUid"> Represents the primary identity of a SystemConnection </param>
  bool DeleteSystemConnectionBySystemConnectionUid(Guid systemConnectionUid);

}

/// <summary> Provides CRUD access to stored InvolvedPersons (based on schema version '1.6.0') </summary>
public partial interface IInvolvedPersons {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding InvolvedPersons.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific InvolvedPerson addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="involvedPersonUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  InvolvedPerson GetInvolvedPersonByInvolvedPersonUid(Guid involvedPersonUid);

  /// <summary> Loads InvolvedPersons. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of InvolvedPersons which should be returned </param>
  InvolvedPerson[] GetInvolvedPersons(int page = 1, int pageSize = 20);

  /// <summary> Loads InvolvedPersons where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of InvolvedPersons which should be returned</param>
  InvolvedPerson[] SearchInvolvedPersons(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new InvolvedPerson and returns its primary identifier (or null on failure). </summary>
  /// <param name="involvedPerson"> InvolvedPerson containing the new values </param>
  bool AddNewInvolvedPerson(InvolvedPerson involvedPerson);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given InvolvedPerson addressed by the primary identifier fields within the given InvolvedPerson. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="involvedPerson"> InvolvedPerson containing the new values (the primary identifier fields within the given InvolvedPerson will be used to address the target record) </param>
  bool UpdateInvolvedPerson(InvolvedPerson involvedPerson);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given InvolvedPerson addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="involvedPersonUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  /// <param name="involvedPerson"> InvolvedPerson containing the new values (the primary identifier fields within the given InvolvedPerson will be ignored) </param>
  bool UpdateInvolvedPersonByInvolvedPersonUid(Guid involvedPersonUid, InvolvedPerson involvedPerson);

  /// <summary> Deletes a specific InvolvedPerson addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="involvedPersonUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  bool DeleteInvolvedPersonByInvolvedPersonUid(Guid involvedPersonUid);

}

/// <summary> Provides CRUD access to stored InvolvementRoles (based on schema version '1.6.0') </summary>
public partial interface IInvolvementRoles {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding InvolvementRoles.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific InvolvementRole addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="involvedPersonRoleUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  InvolvementRole GetInvolvementRoleByInvolvedPersonRoleUid(Guid involvedPersonRoleUid);

  /// <summary> Loads InvolvementRoles. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of InvolvementRoles which should be returned </param>
  InvolvementRole[] GetInvolvementRoles(int page = 1, int pageSize = 20);

  /// <summary> Loads InvolvementRoles where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of InvolvementRoles which should be returned</param>
  InvolvementRole[] SearchInvolvementRoles(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new InvolvementRole and returns its primary identifier (or null on failure). </summary>
  /// <param name="involvementRole"> InvolvementRole containing the new values </param>
  bool AddNewInvolvementRole(InvolvementRole involvementRole);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given InvolvementRole addressed by the primary identifier fields within the given InvolvementRole. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="involvementRole"> InvolvementRole containing the new values (the primary identifier fields within the given InvolvementRole will be used to address the target record) </param>
  bool UpdateInvolvementRole(InvolvementRole involvementRole);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given InvolvementRole addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="involvedPersonRoleUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  /// <param name="involvementRole"> InvolvementRole containing the new values (the primary identifier fields within the given InvolvementRole will be ignored) </param>
  bool UpdateInvolvementRoleByInvolvedPersonRoleUid(Guid involvedPersonRoleUid, InvolvementRole involvementRole);

  /// <summary> Deletes a specific InvolvementRole addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="involvedPersonRoleUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  bool DeleteInvolvementRoleByInvolvedPersonRoleUid(Guid involvedPersonRoleUid);

}

/// <summary> Provides CRUD access to stored StudyRelatedSystemAssignments (based on schema version '1.6.0') </summary>
public partial interface IStudyRelatedSystemAssignments {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding StudyRelatedSystemAssignments.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific StudyRelatedSystemAssignment addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="studyRelatedSystemAssignmentUid"> Represents the primary identity of a StudyRelatedSystemAssignment </param>
  StudyRelatedSystemAssignment GetStudyRelatedSystemAssignmentByStudyRelatedSystemAssignmentUid(Guid studyRelatedSystemAssignmentUid);

  /// <summary> Loads StudyRelatedSystemAssignments. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of StudyRelatedSystemAssignments which should be returned </param>
  StudyRelatedSystemAssignment[] GetStudyRelatedSystemAssignments(int page = 1, int pageSize = 20);

  /// <summary> Loads StudyRelatedSystemAssignments where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of StudyRelatedSystemAssignments which should be returned</param>
  StudyRelatedSystemAssignment[] SearchStudyRelatedSystemAssignments(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new StudyRelatedSystemAssignment and returns its primary identifier (or null on failure). </summary>
  /// <param name="studyRelatedSystemAssignment"> StudyRelatedSystemAssignment containing the new values </param>
  bool AddNewStudyRelatedSystemAssignment(StudyRelatedSystemAssignment studyRelatedSystemAssignment);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given StudyRelatedSystemAssignment addressed by the primary identifier fields within the given StudyRelatedSystemAssignment. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="studyRelatedSystemAssignment"> StudyRelatedSystemAssignment containing the new values (the primary identifier fields within the given StudyRelatedSystemAssignment will be used to address the target record) </param>
  bool UpdateStudyRelatedSystemAssignment(StudyRelatedSystemAssignment studyRelatedSystemAssignment);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given StudyRelatedSystemAssignment addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="studyRelatedSystemAssignmentUid"> Represents the primary identity of a StudyRelatedSystemAssignment </param>
  /// <param name="studyRelatedSystemAssignment"> StudyRelatedSystemAssignment containing the new values (the primary identifier fields within the given StudyRelatedSystemAssignment will be ignored) </param>
  bool UpdateStudyRelatedSystemAssignmentByStudyRelatedSystemAssignmentUid(Guid studyRelatedSystemAssignmentUid, StudyRelatedSystemAssignment studyRelatedSystemAssignment);

  /// <summary> Deletes a specific StudyRelatedSystemAssignment addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="studyRelatedSystemAssignmentUid"> Represents the primary identity of a StudyRelatedSystemAssignment </param>
  bool DeleteStudyRelatedSystemAssignmentByStudyRelatedSystemAssignmentUid(Guid studyRelatedSystemAssignmentUid);

}

/// <summary> Provides CRUD access to stored SiteRelatedSystemAssignments (based on schema version '1.6.0') </summary>
public partial interface ISiteRelatedSystemAssignments {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding SiteRelatedSystemAssignments.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific SiteRelatedSystemAssignment addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="siteRelatedSystemAssignmentUid"> Represents the primary identity of a SiteRelatedSystemAssignment </param>
  SiteRelatedSystemAssignment GetSiteRelatedSystemAssignmentBySiteRelatedSystemAssignmentUid(Guid siteRelatedSystemAssignmentUid);

  /// <summary> Loads SiteRelatedSystemAssignments. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of SiteRelatedSystemAssignments which should be returned </param>
  SiteRelatedSystemAssignment[] GetSiteRelatedSystemAssignments(int page = 1, int pageSize = 20);

  /// <summary> Loads SiteRelatedSystemAssignments where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of SiteRelatedSystemAssignments which should be returned</param>
  SiteRelatedSystemAssignment[] SearchSiteRelatedSystemAssignments(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new SiteRelatedSystemAssignment and returns its primary identifier (or null on failure). </summary>
  /// <param name="siteRelatedSystemAssignment"> SiteRelatedSystemAssignment containing the new values </param>
  bool AddNewSiteRelatedSystemAssignment(SiteRelatedSystemAssignment siteRelatedSystemAssignment);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given SiteRelatedSystemAssignment addressed by the primary identifier fields within the given SiteRelatedSystemAssignment. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="siteRelatedSystemAssignment"> SiteRelatedSystemAssignment containing the new values (the primary identifier fields within the given SiteRelatedSystemAssignment will be used to address the target record) </param>
  bool UpdateSiteRelatedSystemAssignment(SiteRelatedSystemAssignment siteRelatedSystemAssignment);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given SiteRelatedSystemAssignment addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="siteRelatedSystemAssignmentUid"> Represents the primary identity of a SiteRelatedSystemAssignment </param>
  /// <param name="siteRelatedSystemAssignment"> SiteRelatedSystemAssignment containing the new values (the primary identifier fields within the given SiteRelatedSystemAssignment will be ignored) </param>
  bool UpdateSiteRelatedSystemAssignmentBySiteRelatedSystemAssignmentUid(Guid siteRelatedSystemAssignmentUid, SiteRelatedSystemAssignment siteRelatedSystemAssignment);

  /// <summary> Deletes a specific SiteRelatedSystemAssignment addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="siteRelatedSystemAssignmentUid"> Represents the primary identity of a SiteRelatedSystemAssignment </param>
  bool DeleteSiteRelatedSystemAssignmentBySiteRelatedSystemAssignmentUid(Guid siteRelatedSystemAssignmentUid);

}

}
