// <auto-generated />
using System;
using MedicalResearch.VisitData.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalResearch.VisitData.Migrations
{
    [DbContext(typeof(VisitDataDbContext))]
    [Migration("20210323152712_V1.3.0")]
    partial class V130
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MedicalResearch.VisitData.DataRecordingEntity", b =>
                {
                    b.Property<Guid>("TaskGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataRecordingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSchemaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutingPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExecutionDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExecutionState")
                        .HasColumnType("int");

                    b.Property<string>("ExtendedMetaData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesRegardingOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ScheduledDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskExecutionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VisitGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TaskGuid");

                    b.HasIndex("VisitGuid");

                    b.ToTable("VdrDataRecordings");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.DrugApplymentEntity", b =>
                {
                    b.Property<Guid>("TaskGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AppliedUnits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DrugApplymentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DrugDoseMgPerUnitMg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DrugName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutingPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExecutionDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExecutionState")
                        .HasColumnType("int");

                    b.Property<string>("ExtendedMetaData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesRegardingOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ScheduledDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskExecutionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VisitGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TaskGuid");

                    b.HasIndex("VisitGuid");

                    b.ToTable("VdrDrugApplyments");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.StudyEventEntity", b =>
                {
                    b.Property<Guid>("EventGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CauseInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedMetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccourrenceDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParticipantIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyEventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudyExecutionIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EventGuid");

                    b.HasIndex("StudyExecutionIdentifier");

                    b.ToTable("VdrStudyEvents");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.StudyExecutionScopeEntity", b =>
                {
                    b.Property<Guid>("StudyExecutionIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutingInstituteIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedMetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyWorkflowName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StudyWorkflowVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StudyExecutionIdentifier");

                    b.ToTable("VdrStudyExecutionScopes");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.TreatmentEntity", b =>
                {
                    b.Property<Guid>("TaskGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutingPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExecutionDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExecutionState")
                        .HasColumnType("int");

                    b.Property<string>("ExtendedMetaData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesRegardingOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ScheduledDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskExecutionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VisitGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TaskGuid");

                    b.HasIndex("VisitGuid");

                    b.ToTable("VdrTreatments");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.VisitEntity", b =>
                {
                    b.Property<Guid>("VisitGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutingPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExecutionDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExecutionState")
                        .HasColumnType("int");

                    b.Property<string>("ExtendedMetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipantIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ScheduledDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudyExecutionIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VisitExecutionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitProdecureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisitGuid");

                    b.HasIndex("StudyExecutionIdentifier");

                    b.ToTable("VdrVisits");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.DataRecordingEntity", b =>
                {
                    b.HasOne("MedicalResearch.VisitData.VisitEntity", "Visit")
                        .WithMany("DataRecordings")
                        .HasForeignKey("VisitGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.DrugApplymentEntity", b =>
                {
                    b.HasOne("MedicalResearch.VisitData.VisitEntity", "Visit")
                        .WithMany("DrugApplyments")
                        .HasForeignKey("VisitGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.StudyEventEntity", b =>
                {
                    b.HasOne("MedicalResearch.VisitData.StudyExecutionScopeEntity", "StudyExecution")
                        .WithMany("Events")
                        .HasForeignKey("StudyExecutionIdentifier")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StudyExecution");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.TreatmentEntity", b =>
                {
                    b.HasOne("MedicalResearch.VisitData.VisitEntity", "Visit")
                        .WithMany("Treatments")
                        .HasForeignKey("VisitGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.VisitEntity", b =>
                {
                    b.HasOne("MedicalResearch.VisitData.StudyExecutionScopeEntity", "StudyExecution")
                        .WithMany("Visits")
                        .HasForeignKey("StudyExecutionIdentifier")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StudyExecution");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.StudyExecutionScopeEntity", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("MedicalResearch.VisitData.VisitEntity", b =>
                {
                    b.Navigation("DataRecordings");

                    b.Navigation("DrugApplyments");

                    b.Navigation("Treatments");
                });
#pragma warning restore 612, 618
        }
    }
}
