using MedicalResearch.SubjectData.Model;
using System;
using System.ComponentModel.DataAnnotations;
using System.Collections.ObjectModel;

namespace MedicalResearch.SubjectData.StoreAccess {

/// <summary> Provides CRUD access to stored Subjects (based on schema version '0.1.0') </summary>
public partial interface ISubjects {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding Subjects.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific Subject addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="subjectUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  Subject GetSubjectBySubjectUid(Guid subjectUid);

  /// <summary> Loads Subjects. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of Subjects which should be returned </param>
  Subject[] GetSubjects(int page = 1, int pageSize = 20);

  /// <summary> Loads Subjects where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of Subjects which should be returned</param>
  Subject[] SearchSubjects(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new Subject and returns its primary identifier (or null on failure). </summary>
  /// <param name="subject"> Subject containing the new values </param>
  bool AddNewSubject(Subject subject);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given Subject addressed by the primary identifier fields within the given Subject. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="subject"> Subject containing the new values (the primary identifier fields within the given Subject will be used to address the target record) </param>
  bool UpdateSubject(Subject subject);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given Subject addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="subjectUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  /// <param name="subject"> Subject containing the new values (the primary identifier fields within the given Subject will be ignored) </param>
  bool UpdateSubjectBySubjectUid(Guid subjectUid, Subject subject);

  /// <summary> Deletes a specific Subject addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="subjectUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  bool DeleteSubjectBySubjectUid(Guid subjectUid);

}

/// <summary> Provides CRUD access to stored SubjectSiteAssignments (based on schema version '0.1.0') </summary>
public partial interface ISubjectSiteAssignments {

  //// <summary> Returns an info object, which specifies the possible operations (accessor specific permissions) regarding SubjectSiteAssignments.</summary>
  //AccessSpecs GetAccessSpecs();

  /// <summary> Loads a specific SubjectSiteAssignment addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.</summary>
  /// <param name="subjectSiteAssignmentUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  SubjectSiteAssignment GetSubjectSiteAssignmentBySubjectSiteAssignmentUid(Guid subjectSiteAssignmentUid);

  /// <summary> Loads SubjectSiteAssignments. </summary>
  /// <param name="page">Number of the page, which should be returned </param>
  /// <param name="pageSize">Max count of SubjectSiteAssignments which should be returned </param>
  SubjectSiteAssignment[] GetSubjectSiteAssignments(int page = 1, int pageSize = 20);

  /// <summary> Loads SubjectSiteAssignments where values matching to the given filterExpression</summary>
    /// <param name="filterExpression">a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'</param>
  /// <param name="sortingExpression">one or more property names which are used as sort order (before pagination)</param>
  /// <param name="page">Number of the page, which should be returned</param>
  /// <param name="pageSize">Max count of SubjectSiteAssignments which should be returned</param>
  SubjectSiteAssignment[] SearchSubjectSiteAssignments(String filterExpression, String sortingExpression = null, int page = 1, int pageSize = 20);

  /// <summary> Adds a new SubjectSiteAssignment and returns its primary identifier (or null on failure). </summary>
  /// <param name="subjectSiteAssignment"> SubjectSiteAssignment containing the new values </param>
  bool AddNewSubjectSiteAssignment(SubjectSiteAssignment subjectSiteAssignment);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given SubjectSiteAssignment addressed by the primary identifier fields within the given SubjectSiteAssignment. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="subjectSiteAssignment"> SubjectSiteAssignment containing the new values (the primary identifier fields within the given SubjectSiteAssignment will be used to address the target record) </param>
  bool UpdateSubjectSiteAssignment(SubjectSiteAssignment subjectSiteAssignment);

  /// <summary> Updates all values (which are not "FixedAfterCreation") of the given SubjectSiteAssignment addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="subjectSiteAssignmentUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  /// <param name="subjectSiteAssignment"> SubjectSiteAssignment containing the new values (the primary identifier fields within the given SubjectSiteAssignment will be ignored) </param>
  bool UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUid(Guid subjectSiteAssignmentUid, SubjectSiteAssignment subjectSiteAssignment);

  /// <summary> Deletes a specific SubjectSiteAssignment addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.</summary>
  /// <param name="subjectSiteAssignmentUid"> An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more! </param>
  bool DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUid(Guid subjectSiteAssignmentUid);

}

}
