// <auto-generated />
using System;
using MedicalResearch.IdentityManagement.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalResearch.IdentityManagement.Migrations
{
    [DbContext(typeof(IdentityManagementDbContext))]
    partial class IdentityManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.AdditionalSubjectParticipationIdentifierEntity", b =>
                {
                    b.Property<string>("ParticipantIdentifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentifierName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("ResearchStudyUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentifierValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParticipantIdentifier", "IdentifierName", "ResearchStudyUid");

                    b.HasIndex("ParticipantIdentifier", "ResearchStudyUid");

                    b.ToTable("ImsAdditionalSubjectParticipationIdentifiers");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.StudyExecutionScopeEntity", b =>
                {
                    b.Property<Guid>("StudyExecutionIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResearchStudyUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SiteUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudyExecutionIdentifier");

                    b.HasIndex("ResearchStudyUid");

                    b.ToTable("ImsStudyExecutionScopes");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.StudyScopeEntity", b =>
                {
                    b.Property<Guid>("ResearchStudyUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParticipantIdentifierSemantic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyWorkflowName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StudyWorkflowVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ResearchStudyUid");

                    b.ToTable("ImsStudyScopes");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.SubjectAddressEntity", b =>
                {
                    b.Property<Guid>("InternalRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InternalRecordId");

                    b.ToTable("ImsSubjectAddresses");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.SubjectIdentityEntity", b =>
                {
                    b.Property<Guid>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNamePattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ResidentAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RecordId");

                    b.HasIndex("ResidentAddressId");

                    b.ToTable("ImsSubjectIdentities");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.SubjectParticipationEntity", b =>
                {
                    b.Property<string>("ParticipantIdentifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ResearchStudyUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedForStudyExecutionIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SubjectIdentityRecordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParticipantIdentifier", "ResearchStudyUid");

                    b.HasIndex("CreatedForStudyExecutionIdentifier");

                    b.HasIndex("ResearchStudyUid");

                    b.HasIndex("SubjectIdentityRecordId");

                    b.ToTable("ImsSubjectParticipations");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.AdditionalSubjectParticipationIdentifierEntity", b =>
                {
                    b.HasOne("MedicalResearch.IdentityManagement.Persistence.SubjectParticipationEntity", "Participation")
                        .WithMany("AdditionalIdentifiers")
                        .HasForeignKey("ParticipantIdentifier", "ResearchStudyUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participation");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.StudyExecutionScopeEntity", b =>
                {
                    b.HasOne("MedicalResearch.IdentityManagement.Persistence.StudyScopeEntity", "StudyScope")
                        .WithMany("ExecutionScopes")
                        .HasForeignKey("ResearchStudyUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyScope");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.SubjectIdentityEntity", b =>
                {
                    b.HasOne("MedicalResearch.IdentityManagement.Persistence.SubjectAddressEntity", "ResidentAddress")
                        .WithMany("SubjectIdentities")
                        .HasForeignKey("ResidentAddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ResidentAddress");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.SubjectParticipationEntity", b =>
                {
                    b.HasOne("MedicalResearch.IdentityManagement.Persistence.StudyExecutionScopeEntity", "StudyExecutionScope")
                        .WithMany("CreatedParticipations")
                        .HasForeignKey("CreatedForStudyExecutionIdentifier")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalResearch.IdentityManagement.Persistence.StudyScopeEntity", "StudyScope")
                        .WithMany("Participations")
                        .HasForeignKey("ResearchStudyUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalResearch.IdentityManagement.Persistence.SubjectIdentityEntity", "Identity")
                        .WithMany("Participations")
                        .HasForeignKey("SubjectIdentityRecordId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Identity");

                    b.Navigation("StudyExecutionScope");

                    b.Navigation("StudyScope");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.StudyExecutionScopeEntity", b =>
                {
                    b.Navigation("CreatedParticipations");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.StudyScopeEntity", b =>
                {
                    b.Navigation("ExecutionScopes");

                    b.Navigation("Participations");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.SubjectAddressEntity", b =>
                {
                    b.Navigation("SubjectIdentities");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.SubjectIdentityEntity", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("MedicalResearch.IdentityManagement.Persistence.SubjectParticipationEntity", b =>
                {
                    b.Navigation("AdditionalIdentifiers");
                });
#pragma warning restore 612, 618
        }
    }
}
