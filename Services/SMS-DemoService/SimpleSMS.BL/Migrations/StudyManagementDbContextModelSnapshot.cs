// <auto-generated />
using System;
using MedicalResearch.StudyManagement.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalResearch.StudyManagement.Migrations
{
    [DbContext(typeof(StudyManagementDbContext))]
    partial class StudyManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.InstituteEntity", b =>
                {
                    b.Property<Guid>("InstituteUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayLabel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.HasKey("InstituteUid");

                    b.ToTable("SmsInstitutes");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.InstituteRelatedSystemAssignmentEntity", b =>
                {
                    b.Property<Guid>("InstituteRelatedSystemAssignemntUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomRoles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SystemEndpointUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UseAsCandidateSdr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseAsConsumingExternalWdr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseAsOwnPatientSdr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseAsOwnWdr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstituteRelatedSystemAssignemntUid");

                    b.HasIndex("InstituteUid");

                    b.HasIndex("SystemEndpointUid");

                    b.ToTable("SmsInstituteRelatedSystemAssignments");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.InvolvedPersonEntity", b =>
                {
                    b.Property<Guid>("InvolvedPersonUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmailAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.HasKey("InvolvedPersonUid");

                    b.ToTable("SmsInvolvedPersons");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.InvolvementRoleEntity", b =>
                {
                    b.Property<Guid>("InvolvedPersonRoleUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DedicatedToSiteUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InvolvedFrom")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InvolvedPersonUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InvolvedUntil")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ResearchStudyUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvolvedPersonRoleUid");

                    b.HasIndex("DedicatedToSiteUid");

                    b.HasIndex("InvolvedPersonUid");

                    b.HasIndex("ResearchStudyUid");

                    b.ToTable("SmsInvolvementRoles");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.ResearchStudyEntity", b =>
                {
                    b.Property<Guid>("ResearchStudyUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayLabel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("InitiatorInstituteUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InitiatorRelatedProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OriginWdrEndpointUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyWorkflowName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyWorkflowVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectIdentifierTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ResearchStudyUid");

                    b.HasIndex("InitiatorInstituteUid");

                    b.HasIndex("OriginWdrEndpointUid");

                    b.ToTable("SmsResearchStudies");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SiteEntity", b =>
                {
                    b.Property<Guid>("SiteUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RepresentingInstituteUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResearchStudyUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SiteRelatedProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyRelatedSiteIdentifer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SiteUid");

                    b.HasIndex("RepresentingInstituteUid");

                    b.HasIndex("ResearchStudyUid");

                    b.ToTable("SmsSites");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SiteRelatedSystemAssignmentEntity", b =>
                {
                    b.Property<Guid>("SiteRelatedSystemAssignmentUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomRoles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SiteUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SystemEndpointUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SiteRelatedSystemAssignmentUid");

                    b.HasIndex("SiteUid");

                    b.HasIndex("SystemEndpointUid");

                    b.ToTable("SmsSiteRelatedSystemAssignments");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.StudyRelatedSystemAssignmentEntity", b =>
                {
                    b.Property<Guid>("StudyRelatedSystemAssignmentUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomRoles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ResearchStudyUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SystemEndpointUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudyRelatedSystemAssignmentUid");

                    b.HasIndex("ResearchStudyUid");

                    b.HasIndex("SystemEndpointUid");

                    b.ToTable("SmsStudyRelatedSystemAssignments");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SystemConnectionEntity", b =>
                {
                    b.Property<Guid>("SystemConnectionUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DedicatedSiteRelatedSystemAssignmentUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HierSpäterJWTSEttings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerInstituteUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TargetSystemEndpointUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SystemConnectionUid");

                    b.HasIndex("DedicatedSiteRelatedSystemAssignmentUid");

                    b.HasIndex("OwnerInstituteUid");

                    b.HasIndex("TargetSystemEndpointUid");

                    b.ToTable("SmsSystemConnections");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SystemEndpointEntity", b =>
                {
                    b.Property<Guid>("SystemEndpointUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApprovedCert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableRoles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPublic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProviderInstituteUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SystemEndpointUid");

                    b.HasIndex("ProviderInstituteUid");

                    b.ToTable("SmsSystemEndpoints");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.InstituteRelatedSystemAssignmentEntity", b =>
                {
                    b.HasOne("MedicalResearch.StudyManagement.Persistence.InstituteEntity", "Institute")
                        .WithMany("SystemAssignment")
                        .HasForeignKey("InstituteUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.SystemEndpointEntity", "SystemEndpoint")
                        .WithMany("InstituteAssignments")
                        .HasForeignKey("SystemEndpointUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("SystemEndpoint");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.InvolvementRoleEntity", b =>
                {
                    b.HasOne("MedicalResearch.StudyManagement.Persistence.SiteEntity", "DedicatedToSite")
                        .WithMany("SiteDedicatedInvolvementRoles")
                        .HasForeignKey("DedicatedToSiteUid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.InvolvedPersonEntity", "InvolvedPerson")
                        .WithMany("InvolvementRoles")
                        .HasForeignKey("InvolvedPersonUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.ResearchStudyEntity", "ResearchStudy")
                        .WithMany("InvolvementRoles")
                        .HasForeignKey("ResearchStudyUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DedicatedToSite");

                    b.Navigation("InvolvedPerson");

                    b.Navigation("ResearchStudy");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.ResearchStudyEntity", b =>
                {
                    b.HasOne("MedicalResearch.StudyManagement.Persistence.InstituteEntity", "InitiatorInstitute")
                        .WithMany("InitiatedStudies")
                        .HasForeignKey("InitiatorInstituteUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.SystemEndpointEntity", "OriginWdr")
                        .WithMany()
                        .HasForeignKey("OriginWdrEndpointUid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InitiatorInstitute");

                    b.Navigation("OriginWdr");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SiteEntity", b =>
                {
                    b.HasOne("MedicalResearch.StudyManagement.Persistence.InstituteEntity", "RepresentingInstitute")
                        .WithMany("RepresentedSites")
                        .HasForeignKey("RepresentingInstituteUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.ResearchStudyEntity", "Study")
                        .WithMany("Sites")
                        .HasForeignKey("ResearchStudyUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepresentingInstitute");

                    b.Navigation("Study");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SiteRelatedSystemAssignmentEntity", b =>
                {
                    b.HasOne("MedicalResearch.StudyManagement.Persistence.SiteEntity", "Site")
                        .WithMany("SystemAssignments")
                        .HasForeignKey("SiteUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.SystemEndpointEntity", "SystemEndpoint")
                        .WithMany("SiteAssignments")
                        .HasForeignKey("SystemEndpointUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Site");

                    b.Navigation("SystemEndpoint");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.StudyRelatedSystemAssignmentEntity", b =>
                {
                    b.HasOne("MedicalResearch.StudyManagement.Persistence.ResearchStudyEntity", "ResearchStudy")
                        .WithMany("SystemAssignments")
                        .HasForeignKey("ResearchStudyUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.SystemEndpointEntity", "SystemEndpoint")
                        .WithMany("StudyAssignments")
                        .HasForeignKey("SystemEndpointUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ResearchStudy");

                    b.Navigation("SystemEndpoint");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SystemConnectionEntity", b =>
                {
                    b.HasOne("MedicalResearch.StudyManagement.Persistence.SiteRelatedSystemAssignmentEntity", "DedicatedSiteRelatedSystemAssignment")
                        .WithMany("DedicatedSystemConnection")
                        .HasForeignKey("DedicatedSiteRelatedSystemAssignmentUid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.InstituteEntity", "OwnerInstitute")
                        .WithMany("SystemConnections")
                        .HasForeignKey("OwnerInstituteUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalResearch.StudyManagement.Persistence.SystemEndpointEntity", "TargetEndpoint")
                        .WithMany()
                        .HasForeignKey("TargetSystemEndpointUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DedicatedSiteRelatedSystemAssignment");

                    b.Navigation("OwnerInstitute");

                    b.Navigation("TargetEndpoint");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SystemEndpointEntity", b =>
                {
                    b.HasOne("MedicalResearch.StudyManagement.Persistence.InstituteEntity", "ProviderInstitute")
                        .WithMany("ProvidedSystemEndpoints")
                        .HasForeignKey("ProviderInstituteUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProviderInstitute");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.InstituteEntity", b =>
                {
                    b.Navigation("InitiatedStudies");

                    b.Navigation("ProvidedSystemEndpoints");

                    b.Navigation("RepresentedSites");

                    b.Navigation("SystemAssignment");

                    b.Navigation("SystemConnections");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.InvolvedPersonEntity", b =>
                {
                    b.Navigation("InvolvementRoles");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.ResearchStudyEntity", b =>
                {
                    b.Navigation("InvolvementRoles");

                    b.Navigation("Sites");

                    b.Navigation("SystemAssignments");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SiteEntity", b =>
                {
                    b.Navigation("SiteDedicatedInvolvementRoles");

                    b.Navigation("SystemAssignments");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SiteRelatedSystemAssignmentEntity", b =>
                {
                    b.Navigation("DedicatedSystemConnection");
                });

            modelBuilder.Entity("MedicalResearch.StudyManagement.Persistence.SystemEndpointEntity", b =>
                {
                    b.Navigation("InstituteAssignments");

                    b.Navigation("SiteAssignments");

                    b.Navigation("StudyAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
